<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pb_emp.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>